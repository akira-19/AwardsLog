{"version":3,"sources":["background.jpg","utils/getWeb3.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getWeb3","Promise","resolve","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","web3","_web","provider","_web2","wrap","_context","prev","next","ethereum","Web3","enable","t0","console","log","providers","HttpProvider","stop","this","InstituionInput","props","react_default","createElement","id","onSubmit","registerAward","className","type","value","studentInfo","studentId","name","onChange","changeInfo","studentName","award","graduationDate","InstituionOutput","d","Date","year","getFullYear","month","getMonth","day","getDate","institutionName","SearchAward","searchAward","searchInput","institutionId","updateSearchBox","SearchResult","studentAward","RegisterInstitution","registerInstitution","updateInstitutionName","Usage","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","accounts","networkId","deployedNetwork","instance","sent","eth","getAccounts","net","getId","SimpleStorageContract","networks","Contract","abi","address","setState","contract","runExample","alert","error","_callee2","_this$state","userInstitution","_context2","state","methods","getInstitution","_ref3","_callee3","e","_this$state2","_context3","preventDefault","send","from","_x","apply","arguments","_ref4","_callee4","_this$state3","_context4","addAwardInfo","_x2","_ref5","_callee5","_this$state4","awardInfo","_context5","getAwardInfo","_x3","bind","assertThisInitialized","property","target","assign","href","style","backgroundImage","concat","bg","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5bda0c56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.af5c8aad.jpg\";","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:7545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport bg from \"./background.jpg\"\n\nimport \"./App.css\";\n\n\nfunction InstituionInput(props){\n    return (\n        <div id=\"instituionInput\">\n            <h2>Register an Award</h2>\n            <form id=\"use\" onSubmit={props.registerAward}>\n                <div className=\"formInput\">\n                    <span>Student ID:</span>\n                    <input type=\"text\" value={props.studentInfo.studentId　|| \"\"} name=\"studentId\" onChange={props.changeInfo}/>\n                </div>\n                <div className=\"formInput\">\n                    <span>Student Name:</span>\n                    <input type=\"text\" value={props.studentInfo.studentName || \"\"} name=\"studentName\" onChange={props.changeInfo}/>\n                </div>\n                <div className=\"formInput\">\n                    <span>Award:</span>\n                    <input type=\"text\" value={props.studentInfo.award || \"\"} name=\"award\" onChange={props.changeInfo}/>\n                </div>\n                <div className=\"formInput\">\n                    <span>Date:</span>\n                    <input type=\"date\" value={props.studentInfo.graduationDate || \"\"} name=\"graduationDate\" onChange={props.changeInfo}/>\n                </div>\n                <div className=\"formInput\">\n                    <span></span>\n                    <input className=\"inputText\" type=\"submit\" value=\"Register\" />\n                </div>\n            </form>\n        </div>\n    );\n}\n\nfunction InstituionOutput(props){\n    let d = new Date();\n    let year = d.getFullYear();\n    let month = d.getMonth();\n    let day = d.getDate();\n    let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    return(\n        <div id=\"output\">\n            <div id=\"proofLetter\">\n                <p>{months[month]} {day}, {year}</p>\n                <p>To Whom It May Concern,</p>\n                <p>This letter will verify that\n                    <span> {props.studentInfo.studentName} </span>\n                    <span> (ID: {props.studentInfo.studentId}) </span>\n                   graduated from\n                   <span> {props.institutionName} </span>\n                   with\n                   <span> {props.studentInfo.award} </span>\n                   on\n                   <span> {props.studentInfo.graduationDate} </span>\n                </p>\n                <p>\n                   If you need additional information, please contact us via email or phone.\n                </p>\n\n            </div>\n            <hr/>\n        </div>\n    );\n}\n\nfunction SearchAward(props){\n    return(\n        <div id=\"searchAward\">\n            <h2>Find an Award</h2>\n            <form id=\"searchForm\" onSubmit={props.searchAward}>\n                <div className=\"searchInput\">\n                    <span>Institution ID:</span>\n                    <input\n                        className=\"inputText\"\n                        name=\"institutionId\"\n                        type=\"text\"\n                        value={props.searchInput.institutionId || \"\"}\n                        onChange={props.updateSearchBox}/>\n                </div>\n                <div className=\"searchInput\">\n                    <span>Student ID:</span>\n                    <input\n                        className=\"inputText\"\n                        type=\"text\"\n                        name=\"studentId\"\n                        value={props.searchInput.studentId || \"\"} onChange={props.updateSearchBox}\n                        />\n                </div>\n                <div className=\"searchInput\">\n                    <span></span>\n                    <input className=\"inputText\" type=\"submit\" value=\"Search\" />\n                </div>\n            </form>        </div>\n    );\n}\n\nfunction SearchResult(props){\n    if (props.studentAward.studentId){\n        let d = new Date();\n        let year = d.getFullYear();\n        let month = d.getMonth();\n        let day = d.getDate();\n        let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        return (\n            <div id=\"awardOutput\">\n                <div id=\"awardProof\">\n                    <p>{months[month]} {day}, {year}</p>\n                    <p>To Whom It May Concern,</p>\n                    <p>This letter will verify that\n                        <span> {props.studentAward.studentName} </span>\n                        <span> (ID: {props.studentAward.studentId}) </span>\n                       graduated from\n                       <span> {props.institutionName} </span>\n                       with\n                       <span> {props.studentAward.award} </span>\n                       on\n                       <span> {props.studentAward.graduationDate} </span>\n                    </p>\n                    <p>\n                       If you need additional information, please contact us via email or phone.\n                    </p>\n\n                </div>\n                <hr/>\n            </div>\n        );\n    }else{\n        return(\n            <div id=\"awardOutput\">\n                <div id=\"awardProof\">\n                    <h2>The result will be showed here.</h2>\n                </div>\n                <hr/>\n            </div>\n        );\n    }\n}\n\n\nfunction RegisterInstitution(props){\n    return (\n        <div>\n            <div id=\"registerInstitution\">\n                <h2>Register an Institution</h2>\n                <form id=\"registerInstitutionForm\" onSubmit={props.registerInstitution}>\n                    <div className=\"searchInput\">\n                        <span>Institution Name:</span>\n                        <input className=\"inputText\"\n                            type=\"text\" value={props.institutionName}\n                            onChange={props.updateInstitutionName}\n                            />\n                    </div>\n                    <div className=\"searchInput\">\n                        <span></span>\n                        <input className=\"inputText\" type=\"submit\" value=\"Register\"/>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nfunction Usage(){\n    return (\n        <div id=\"usage\">\n            <div className=\"usageList\">\n                <h3>1. Register an Award</h3>\n                <p>Register an award, and anyone can find the information by the student number and the institution address.</p>\n                <h3>2. Find an Award</h3>\n                <p>You can find authorized students&#39; information by a student number and an institution address.</p>\n                <h3>3. Register as an Institution</h3>\n                <p>It should be allowed to register institutions by only the contract owner (or in another authorized way), but anyone can register as an institution here. Your address will be the institution ID.</p>\n                <h3>* Use Ropsten network</h3>\n            </div>\n        </div>\n    );\n}\n\n\nconst studentInfo = {\n    studentId: \"\",\n    studentName: \"\",\n    institutionName: \"\",\n    award: \"\",\n    graduationDate: \"\"\n};\n\nconst studentAward = {\n    studentId: \"\",\n    studentName: \"\",\n    institutionName: \"\",\n    award: \"\",\n    graduationDate: \"\"\n};\n\nconst searchInput  = {\n    institutionId: \"\",\n    studentId: \"\"\n}\n\nconst institutionName = \"\";\n\n\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          studentInfo: studentInfo,\n          searchInput: searchInput,\n          studentAward: studentAward,\n          institutionName: institutionName,\n          web3: null,\n          accounts: null,\n          contract: null\n      };\n      this.changeInfo = this.changeInfo.bind(this);\n      this.registerInstitution = this.registerInstitution.bind(this);\n      this.updateInstitutionName = this.updateInstitutionName.bind(this);\n      this.registerAward = this.registerAward.bind(this);\n      this.searchAward = this.searchAward.bind(this);\n      this.updateSearchBox = this.updateSearchBox.bind(this);\n  }\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorageContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SimpleStorageContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance }, this.runExample);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n\n    const userInstitution = await contract.methods.getInstitution().call();\n    this.setState({\n        institutionName: userInstitution\n    })\n    console.log(userInstitution);\n  };\n\n\n\n  changeInfo(e){\n      let property = e.target.name;\n      let studentInfo = Object.assign({}, this.state.studentInfo)\n      studentInfo[property] = e.target.value;\n      this.setState({\n              studentInfo: studentInfo\n      });\n  }\n\n  updateSearchBox(e){\n      let property = e.target.name;\n      let searchInput = Object.assign({}, this.state.searchInput)\n      searchInput[property] = e.target.value;\n      this.setState({\n              searchInput: searchInput\n      });\n  }\n\n  updateInstitutionName(e){\n      this.setState({\n          institutionName: e.target.value\n      });\n  }\n\n  registerInstitution = async (e) => {\n      e.preventDefault();\n      const { accounts, contract } = this.state;\n      const institutionName = this.state.institutionName;\n      await contract.methods.registerInstitution(institutionName).send({ from: accounts[0] });\n  }\n\n  registerAward = async (e) => {\n      e.preventDefault();\n      const { accounts, contract } = this.state;\n      const studentId = this.state.studentInfo.studentId;\n      const studentName = this.state.studentInfo.studentName;\n      const award = this.state.studentInfo.award;\n      const graduationDate = this.state.studentInfo.graduationDate;\n\n      await contract.methods.addAwardInfo(studentId, studentName, award, graduationDate).send({ from: accounts[0] });\n  }\n\n  searchAward = async (e) => {\n       e.preventDefault();\n       const { accounts, contract } = this.state;\n       const institutionId = this.state.searchInput.institutionId;\n       const studentId = this.state.searchInput.studentId;\n\n       let awardInfo = await contract.methods.getAwardInfo(studentId, institutionId).call()\n\n       awardInfo = {\n           studentId: awardInfo.studentId,\n           studentName: awardInfo.studentName,\n           institutionName: awardInfo.institutionName,\n           award: awardInfo.award,\n           graduationDate: awardInfo.graduationDate\n       };\n\n       this.setState({\n           studentAward: awardInfo\n       });\n  }\n\n\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div className=\"App\">\n          <nav className=\"navbar\">\n              <div className=\"title\"><a href=\"#\">10 weeks project</a></div>\n              <div className=\"menu\">\n                  <ul>\n                      <li><a className=\"\" href=\"#usage\">How to use</a></li>\n                      <li><a className=\"\" href=\"#use\">Use the Dapp</a></li>\n                  </ul>\n              </div>\n          </nav>\n          <div id=\"toppage\" style={{backgroundImage:`url(${bg})`}}>\n              <div className=\"titleText\">\n                  <h2>Awards Log</h2>\n                  <p>Get your authorized award information</p>\n              </div>\n          </div>\n\n          <SearchAward\n              searchInput={this.state.searchInput}\n              searchAward={this.searchAward}\n              updateSearchBox={this.updateSearchBox}\n          />\n\n          <SearchResult\n              studentAward={this.state.studentAward}\n              institutionName={this.state.institutionName}\n           />\n\n          <InstituionInput\n              studentInfo={this.state.studentInfo} changeInfo={this.changeInfo}\n              registerAward={this.registerAward}\n          />\n\n          <InstituionOutput\n              studentInfo={this.state.studentInfo}\n              institutionName={this.state.institutionName}\n          />\n\n          <RegisterInstitution\n              institutionName={this.state.institutionName} registerInstitution={this.registerInstitution}\n              updateInstitutionName={this.updateInstitutionName}\n              />\n\n          <Usage/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}